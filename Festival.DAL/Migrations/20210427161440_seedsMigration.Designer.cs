// <auto-generated />
using System;
using Festival.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Festival.DAL.Migrations
{
    [DbContext(typeof(FestivalDbContext))]
    [Migration("20210427161440_seedsMigration")]
    partial class seedsMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Festival.DAL.Entities.BandEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("873634ea-31a3-4fe1-adb9-fecb9be923d4"),
                            Description = "Mega super banda",
                            ImgUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/Metallica_at_The_O2_Arena_London_2008.jpg/1200px-Metallica_at_The_O2_Arena_London_2008.jpg",
                            Name = "Banda 1"
                        },
                        new
                        {
                            Id = new Guid("8d898b36-d7d3-46a4-b979-a14ef997136b"),
                            Description = "Fuj Fuj banda",
                            ImgUrl = "https://scontent-prg1-1.xx.fbcdn.net/v/t1.6435-0/p526x296/45428212_322097681904122_8124368898846883840_n.jpg?_nc_cat=108&ccb=1-3&_nc_sid=8bfeb9&_nc_ohc=R2ImRaXPTQEAX_Avgv4&_nc_ht=scontent-prg1-1.xx&tp=6&oh=52dbae9db02f0817f70e76e26a65bc41&oe=60AF53FD",
                            Name = "Banda 2"
                        });
                });

            modelBuilder.Entity("Festival.DAL.Entities.EventEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.HasIndex("StageId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab1a03eb-172a-4690-b3db-55361959c309"),
                            BandId = new Guid("873634ea-31a3-4fe1-adb9-fecb9be923d4"),
                            EndTime = new DateTime(2015, 10, 5, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            StageId = new Guid("8e1212d4-c0b2-40c4-856f-18ac69b92226"),
                            StartTime = new DateTime(2015, 10, 5, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("426820af-3a66-48c2-b8d6-00ef2d5ac328"),
                            BandId = new Guid("8d898b36-d7d3-46a4-b979-a14ef997136b"),
                            EndTime = new DateTime(2015, 8, 5, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            StageId = new Guid("8e1212d4-c0b2-40c4-856f-18ac69b92226"),
                            StartTime = new DateTime(2015, 5, 5, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Festival.DAL.Entities.StageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e1212d4-c0b2-40c4-856f-18ac69b92226"),
                            Description = "Stage s výhledem",
                            ImgUrl = "https://c8.alamy.com/comp/BWHHRB/view-from-the-top-of-the-hill-at-the-top-of-the-park-stage-at-glastonbury-BWHHRB.jpg",
                            Name = "Stage na kopcu"
                        });
                });

            modelBuilder.Entity("Festival.DAL.Entities.EventEntity", b =>
                {
                    b.HasOne("Festival.DAL.Entities.BandEntity", "Band")
                        .WithMany("Events")
                        .HasForeignKey("BandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Festival.DAL.Entities.StageEntity", "Stage")
                        .WithMany("Events")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Band");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("Festival.DAL.Entities.BandEntity", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Festival.DAL.Entities.StageEntity", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
